#include "stdafx.h"
#include "PokemonManager.h"

PokemonManager::PokemonManager()
{
}


PokemonManager::~PokemonManager()
{
}

void PokemonManager::SaveMyPokemon()
{
	std::ofstream fout("DB/MyPokemon.db", std::ios::binary);
	if (fout.fail() == false)
	{
		fout << m_pokemonCount;
		fout.write((const char*)m_myPokemonList, sizeof(Pokemon) * 6);
	}
}

void PokemonManager::LoadMyPokemon()
{
	Pokemon* table = new Pokemon[6];
	std::ifstream fout;

	fout.open("DB/MyPokemon.db", std::ios::binary);

	if (m_myPokemonList[0].m_level == 0)
	{
		if (fout.fail() == false)
		{
			fout >> m_pokemonCount;
			fout.read((char*)table, sizeof(Pokemon) * 6);
			fout.close();

			for (int i = 0; i < m_pokemonCount; i++)
			{
				m_myPokemonList[i] = table[i];
				strcpy_s(m_myPokemonList[i].m_nickname,20, m_myPokemonList[i].m_data.m_name);
			}
		}
		else
		{
			RootMyPokemon();
		}
	}
}

void PokemonManager::SaveNPCPokemon()
{
	EnemyPokemonTable* table = new EnemyPokemonTable[TRAINER_TOTAL_NUMBER];

	short i = 0;

	/*
	NPC ¹øÈ£ : NPC.db¿¡ ÀÛ¼ºµÈ ¹øÈ£¶û ÀÏÄ¡ÇØ¾ßÇÔ
	Æ÷ÄÏ¸ó Á¤º¸ : 
		- Æ÷ÄÏ¸ó1 ¹øÈ£
		- Æ÷ÄÏ¸ó2 ¹øÈ£
		- Æ÷ÄÏ¸ó3 ¹øÈ£
		- Æ÷ÄÏ¸ó4 ¹øÈ£
		- Æ÷ÄÏ¸ó5 ¹øÈ£
		- Æ÷ÄÏ¸ó6 ¹øÈ£
	*/
	table[i++] = { 1,{ {11, } , {15, }, {16, }, {149, }, {127, }, {-1, } } };
	table[i++] = { 4,{ {118, }, {43, }, {106, }, {25, }, {26, }, {32, } } };

	std::ofstream fout("DB/NPC_Pokemon.db", std::ios::binary);

	if (fout.fail() == false)
	{
		fout.write((const char*)table, sizeof(EnemyPokemonTable) * TRAINER_TOTAL_NUMBER);
	}

	delete[] table;
}

void PokemonManager::LoadNPCPokemon()
{
	EnemyPokemonTable* table = new EnemyPokemonTable[TRAINER_TOTAL_NUMBER];
	std::ifstream fout;

	fout.open("DB/NPC_Pokemon.db", std::ios::binary);

	if (fout.fail() == false)
	{
		fout.read((char*)table, sizeof(EnemyPokemonTable) * TRAINER_TOTAL_NUMBER);
		fout.close();

		for (int i = 0; i < TRAINER_TOTAL_NUMBER; i++)
		{
			EnemyPokemonTable temp;
			temp.npcNumber = table[i].npcNumber;
			temp.PokemonList[0] = table[i].PokemonList[0];
			temp.PokemonList[1] = table[i].PokemonList[1];
			temp.PokemonList[2] = table[i].PokemonList[2];
			temp.PokemonList[3] = table[i].PokemonList[3];
			temp.PokemonList[4] = table[i].PokemonList[4];
			temp.PokemonList[5] = table[i].PokemonList[5];
			m_enemyTable.push_back(temp);
		}
	}
}

void PokemonManager::SavePokemonTable()
{
	PokemonTable* table = new PokemonTable[POKEMON_TOTAL_NUMBER];
	std::ofstream fout("DB/SkillTable.db");

	short i = 0;

	/*
	Æ÷ÄÏ¸ó ¹øÈ£
	±â¼ú 1 ¹øÈ£
	±â¼ú 2 ¹øÈ£
	±â¼ú 3 ¹øÈ£
	±â¼ú 4 ¹øÈ£
	±â¼ú ¾øÀ¸¸é -1
	*/

	table[i++] = { i, 32, 72, -1, -1 }; //ÀÌ»óÇØ¾¾ - ¸öÅë¹ÚÄ¡±â, ¾¾»Ñ¸®±â
	table[i++] = { i, 74, 72, 21, -1 }; //ÀÌ»óÇØÇ® - ÀÙ³¯°¡¸£±â, ¾¾»Ñ¸®±â, µ¢±¼Ã¤Âï
	table[i++] = { i, 74, 72, 21, 75 }; //ÀÌ»óÇØ²É - ¸öÅë¹ÚÄ¡±â, ¾¾»Ñ¸®±â, ¼Ö¶óºö
	table[i++] = { i, 44, 9, -1, -1 }; //ÆÄÀÌ¸® - ¿ïÀ½¼Ò¸®, ÇÒÄû±â
	table[i++] = { i, 44, 9, 51, -1 }; //¸®ÀÚµå - ¿ïÀ½¼Ò¸®, ÇÒÄû±â, ºÒ²É¼¼·Ê
	table[i++] = { i, 44, 9, 51, 42 }; //¸®ÀÚ¸ù - ¿ïÀ½¼Ò¸®, ÇÒÄû±â, ºÒ²É¼¼·Ê, Â°·Áº¸±â
	table[i++] = { i, 32, 38, -1, -1 }; //²¿ºÎ±â - ¸öÅë¹ÚÄ¡±â, ²¿¸®Èçµé±â
	table[i++] = { i, 32, 38, 144, -1 }; //¾î´ÏºÎ±â - ¸öÅë¹ÚÄ¡±â, ²¿¸®Èçµé±â, °ÅÇ°
	table[i++] = { i, 32, 38, 144, 54 }; //°ÅºÏ¿Õ - ¸öÅë¹ÚÄ¡±â, ²¿¸®Èçµé±â, °ÅÇ°, ¹°´ëÆ÷
	table[i++] = { i, 32, 80, -1, -1 }; //Ä³ÅÍÇÇ - ¸öÅë¹ÚÄ¡±â, ½Ç»Õ±â
	table[i++] = { i, 105, -1, -1, -1 }; //´Üµ¥±â - ´Ü´ÜÇØÁö±â
	table[i++] = { i, 92, 76, 77, 78 }; //¹öÅÍÇÃ - ¿°µ¿·Â, µ¶°¡·ç, Àú¸®°¡·ç, ¼ö¸é°¡·ç
	table[i++] = { i, 39, 80, -1, -1 }; //»ÔÃæÀÌ - µ¶Ä§, ½Ç»Õ±â
	table[i++] = { i, 105, -1, -1, -1 }; //µüÃæÀÌ - ´Ü´ÜÇØÁö±â
	table[i++] = { i, 30, 115, 98, -1 }; //µ¶Ä§ºØ - ¸¶±¸Âî¸£±â, ±âÃæÀü, ºÐ³ë
	table[i++] = { i, 15, 27, -1, -1 }; //±¸±¸ - ¹Ù¶÷ÀÏÀ¸Å°±â, ¸ð·¡»Ñ¸®±â
	table[i++] = { i, 15, 27, 32, -1 }; //ÇÇÁÔ - ¹Ù¶÷ÀÏÀ¸Å°±â, ¸ð·¡»Ñ¸®±â, ¸öÅë¹ÚÄ¡±â
	table[i++] = { i, 15, 27, 32, 97 }; //ÇÇÁÔÅõ - ¹Ù¶÷ÀÏÀ¸Å°±â, ¸ð·¡»Ñ¸®±â, ¸öÅë¹ÚÄ¡±â, Àü±¤¼®È­
	table[i++] = { i, 32, 38, -1, -1 }; //²¿·¿ - ¸öÅë¹ÚÄ¡±â, ²¿¸®Èçµé±â
	table[i++] = { i, 32, 38, 97, -1 }; //·¹Æ®¶ó - ¸öÅë¹ÚÄ¡±â, ²¿¸®Èçµé±â, Àü±¤¼®È­
	table[i++] = { i, 63, 44, -1, -1 }; //±úºñÂü - ÂÉ±â, ¿ïÀ½¼Ò¸®
	table[i++] = { i, 63, 44, 42, -1 }; //±úºñµå¸±Á¶ - ÂÉ±â, ¿ïÀ½¼Ò¸®, Â°·Áº¸±â
	table[i++] = { i, 34, 42, -1, -1 }; //¾Æº¸ - ±è¹ä¸»ÀÌ, Â°·Áº¸±â
	table[i++] = { i, 34, 42, 39, -1 }; //¾Æº¸Å© - ±è¹ä¸»ÀÌ, Â°·Áº¸±â, µ¶Ä§
	table[i++] = { i, 83, 44, -1, -1 }; //ÇÇÄ«Ãò - Àü±â¼îÅ©, ¿ïÀ½¼Ò¸®
	table[i++] = { i, 83, 85, -1, -1 }; //¶óÀÌÃò - Àü±â¼îÅ©, ¿ïÀ½¼Ò¸®, Àü±âÀÚ¼®ÆÄ
	table[i++] = { i, 9, 27, -1, -1 }; //¸ð·¡µÎÁö - ÇÒÄû±â, ¸ð·¡»Ñ¸®±â
	table[i++] = { i, 9, 27, 162, -1 }; //°íÁö - ÇÒÄû±â, ¸ð·¡»Ñ¸®±â, º£¾î°¡¸£±â
	table[i++] = { i, 44, 32, -1, -1 }; //´Ïµå·±¡Ï - ¿ïÀ½¼Ò¸®, ¸öÅë¹ÚÄ¡±â
	table[i++] = { i, 44, 32, 9, -1 }; //´Ïµå¸®³ª - ¿ïÀ½¼Ò¸®, ¸öÅë¹ÚÄ¡±â, ÇÒÄû±â
	table[i++] = { i, 32, 9, 33, 54 }; //´ÏµåÄý - ¸öÅë¹ÚÄ¡±â, ÇÒÄû±â, ´©¸£±â, °ÅÇ°
	table[i++] = { i, 42, 32, -1, -1 }; //´Ïµå·±¡Î - Â°·Áº¸±â, ¸öÅë¹ÚÄ¡±â
	table[i++] = { i, 42, 32, 29, -1 }; //´Ïµå¸®³ë - Â°·Áº¸±â, ¸öÅë¹ÚÄ¡±â, »ÔÂî¸£±â
	table[i++] = { i, 39, 42, 29, 23 }; //´ÏµåÅ· - µ¶Ä§, ¸öÅë¹ÚÄ¡±â, »ÔÂî¸£±â, µÎ¹øÄ¡±â
	table[i++] = { i, 0, 44, -1, -1 }; //»ß»ß - ¸·Ä¡±â, ¿ïÀ½¼Ò¸®
	table[i++] = { i, 106, 2, 46, 117 }; //ÇÈ½Ã - ÀÛ¾ÆÁö±â, ¿¬¼Ó»´Ä¡±â, ³ë·¡ÇÏ±â, ¼Õ°¡¶ôÈçµé±â
	table[i++] = { i, 51, 38, -1, -1 }; //½Ä½ºÅ×ÀÏ - ºÒ²É¼¼·Ê, ²¿¸®Èçµé±â
	table[i++] = { i, 51, 38, 97, 45 }; //³ªÀÎÅ×ÀÏ - ºÒ²É¼¼·Ê, ²¿¸®Èçµé±â, Àü±¤¼®È­, ¿ïºÎÂ¢±â
	table[i++] = { i, 46, -1, -1, -1 }; //Çª¸° - ³ë·¡ÇÏ±â
	table[i++] = { i, 46, 49, 110, 2 }; //ÇªÅ©¸° - ³ë·¡ÇÏ±â, »ç½½¹­±â, ¿õÅ©¸®±â, ¿¬¼Ó»´Ä¡±â
	table[i++] = { i, 140, -1, -1, -1 }; //ÁÖ¹î - ÈíÇ÷
	table[i++] = { i, 102, 140, 47, -1 }; //°ñ¹î - ½ÈÀº¼Ò¸®, ÈíÇ÷, ÃÊÀ½ÆÄ
	table[i++] = { i, 70, -1, -1, -1 }; //¶Ñ¹÷ÃÊ - Èí¼ö
	table[i++] = { i, 70, 76, 77, 78 }; //³¿»õ²¿ - Èí¼ö, µ¶°¡·ç, Àú¸®°¡·ç, ¼ö¸é°¡·ç
	table[i++] = { i, 76, 77, 78, -1 }; //¶óÇÃ·¹½Ã¾Æ - µ¶°¡·ç, Àú¸®°¡·ç, ¼ö¸é°¡·ç
	table[i++] = { i, 9, -1, -1, -1 }; //ÆÄ¶ó½º - ÇÒÄû±â
	table[i++] = { i, 9, 77, 140, -1 }; //ÆÄ¶ó¼½Æ® - ÇÒÄû±â, Àú¸®°¡·ç, ÈíÇ÷
	table[i++] = { i, 32, 49, -1, -1 }; //ÄÜÆÎ - ¸öÅë¹ÚÄ¡±â, »ç½½¹­±â
	table[i++] = { i, 32, 49, 140, 76 }; //µµ³ª¸® - ¸öÅë¹ÚÄ¡±â, »ç½½¹­±â, ÈíÇ÷, µ¶°¡·ç
	table[i++] = { i, 9, -1, -1, -1 }; //µð±×´Ù - ÇÒÄû±â
	table[i++] = { i, 9, 44, 90, 27 }; //´ÚÆ®¸®¿À - ÇÒÄû±â, ¿ïÀ½¼Ò¸®, ±¸¸ÛÆÄ±â, ¸ð·¡»Ñ¸®±â
	table[i++] = { i, 9, 44, -1, -1 }; //³ª¿Ë - ÇÒÄû±â, ¿ïÀ½¼Ò¸®
	table[i++] = { i, 9, 44, 43, 102 }; //Æä¸£½Ã¿Â - ÇÒÄû±â, ¿ïÀ½¼Ò¸®, ¹°±â, ½ÈÀº¼Ò¸®
	table[i++] = { i, 9, -1, -1, -1 }; //°í¶óÆÄ´ö - ÇÒÄû±â
	table[i++] = { i, 9, 38, 43, 102 }; //°ñ´ö - ÇÒÄû±â, ²¿¸®Èçµé±â
	table[i++] = { i, 9, 42, -1, -1 }; //¸ÁÅ° - ÇÒÄû±â, Â°·Áº¸±â
	table[i++] = { i, 9, 42, 66, -1 }; //¼º¿ø¼þ - ÇÒÄû±â, Â°·Áº¸±â, ¾È´Ù¸®°É±â
	table[i++] = { i, 43, 45, -1, -1 }; //°¡µð - ¹°±â, ¿ïºÎÂ¢±â
	table[i++] = { i, 45, 51, 42, 35 }; //À©µð - ¿ïºÎÂ¢±â, ºÒ²É¼¼·Ê, Â°·Áº¸±â, µ¹Áø
	table[i++] = { i, 144, -1, -1, -1 }; //¹ßÃ¬ÀÌ - °ÅÇ°
	table[i++] = { i, 144, 94, 54, 102 }; //¼ö·úÃ¬ÀÌ - °ÅÇ°, ÃÖ¸é¼ú, ¹°´ëÆ÷
	table[i++] = { i, 94, 102, 2, 33 }; //°­Ã¬ÀÌ - ÃÖ¸é¼ú, ¹°´ëÆ÷, ¿¬¼Ó»´Ä¡±â, ´©¸£±â
	table[i++] = { i, 99, -1, -1, -1 }; //ÄÉÀÌ½Ã - ¼ø°£ÀÌµ¿
	table[i++] = { i, 99, 92, 49, 133 }; //À±°Ö¶ó - ¼ø°£ÀÌµ¿, ¿°µ¿·Â, »ç½½¹­±â, ¼ù°¡¶ôÈÖ±â
	table[i++] = { i, 99, 92, 49, 133 }; //ÈÄµò - ¼ø°£ÀÌµ¿, ¿°µ¿·Â, »ç½½¹­±â,¼ù°¡¶ôÈÖ±â
	table[i++] = { i, 1, -1, -1, -1 }; //¾ËÅë¸ó - ÅÂ±Ç´ç¼ö
	table[i++] = { i, 1, 66, 42, -1 }; //±ÙÀ°¸ó - ÅÂ±Ç´ç¼ö, ¾È´Ù¸®°É±â, Â°·Áº¸±â
	table[i++] = { i, 1, 66, 42, -1 }; //±«·Â¸ó - ÅÂ±Ç´ç¼ö, ¾È´Ù¸®°É±â, Â°·Áº¸±â
	table[i++] = { i, 21, 73, -1, -1 }; //¸ð´ÙÇÇ - µ¢ÄðÃ¤Âï, ¼ºÀå
	table[i++] = { i, 21, 73, 34, 76 }; //¿ìÃ÷µ¿ - µ¢ÄðÃ¤Âï, ¼ºÀå, ±è¹ä¸»ÀÌ, µ¶°¡·ç
	table[i++] = { i, 78, 77, 50, 74 }; //¿ìÃ÷º¸Æ® - ¼ö¸é°¡·ç, Àú¸®°¡·ç, ¿ëÇØ¾×, ÀÙ³¯°¡¸£±â
	table[i++] = { i, 50, -1, -1, -1 }; //¿Õ´«ÇØ - ¿ëÇØ¾×
	table[i++] = { i, 50, 47, 34, 39 }; //µ¶ÆÄ¸® - ¿ëÇØ¾×, ÃÊÀ½ÆÄ, ±è¹ä¸»ÀÌ, µ¶Ä§
	table[i++] = { i, 32, 73, -1, -1 }; //²¿¸¶µ¹ - ¸öÅë¹ÚÄ¡±â
	table[i++] = { i, 32, 110, -1, -1 }; //µ¥±¸¸® - ¸öÅë¹ÚÄ¡±â, ¿õÅ©¸®±â
	table[i++] = { i, 32, 110, -1, -1 }; //µü±¸¸® - ¸öÅë¹ÚÄ¡±â, ¿õÅ©¸®±â
	table[i++] = { i, 51, -1, -1, -1 }; //Æ÷´ÏÅ¸ - ºÒ²É¼¼·Ê
	table[i++] = { i, 51, 38, 22, 44 }; //³¯½ß¸¶ - ºÒ²É¼¼·Ê, ²¿¸®Èçµé±â, Áþ¹â±â, ¿ïÀ½¼Ò¸®
	table[i++] = { i, 92, -1, -1, -1 }; //¾ßµ· - ¿°µ¿·Â
	table[i++] = { i, 92, 49, 28, -1 }; //¾ßµµ¶õ - ¿°µ¿·Â, »ç½½¹­±â, ¹ÚÄ¡±â
	table[i++] = { i, 32, 48, -1, -1 }; //ÄÚÀÏ - ¸öÅë¹ÚÄ¡±â, ¼Ò´ÐºÕ
	table[i++] = { i, 32, 48, 83, -1 }; //·¹¾îÄÚÀÏ - ¸öÅë¹ÚÄ¡±â, ¼Ò´ÐºÕ, Àü±â¼îÅ©
	table[i++] = { i, 63, 27, -1, -1 }; //ÆÄ¿À¸® - ÂÉ±â, ¸ð·¡»Ñ¸®±â
	table[i++] = { i, 63, -1, -1, -1 }; //µÎµÎ - ÂÉ±â
	table[i++] = { i, 63, 44, 30, -1 }; //µÎÆ®¸®¿À - ÂÉ±â, ¿ïÀ½¼Ò¸®, ¸¶±¸Âî¸£±â
	table[i++] = { i, 28, -1, -1, -1 }; //ÁêÁê - ¹ÚÄ¡±â
	table[i++] = { i, 28, 44, 61, -1 }; //Áê·¹°ï - ¹ÚÄ¡±â, ¿ïÀ½¼Ò¸®, ¿À·Î¶óºö
	table[i++] = { i, 0, 49, -1, -1 }; //ÁúÆÜÀÌ - ¸·Ä¡±â, »ç½½¹­±â
	table[i++] = { i, 0, 49, 138, -1 }; //Áú»µ±â - ¸·Ä¡±â, »ç½½¹­±â, µ¶°¡½º
	table[i++] = { i, 32, 109, -1, -1 }; //¼¿·¯ - ¸öÅë¹ÚÄ¡±â, ²®Áú¿¡¼û±â
	table[i++] = { i, 109, 47, 127, 61 }; //ÆÄ¸£¼¿ - ²®Áú¿¡¼û±â, ÃÊÀ½ÆÄ, ²®Áú³¢¿ì±â, ¿À·Î¶óºö
	table[i++] = { i, 121, 108, 100, -1 }; //°í¿À½º - ÇÓ±â, ÀÌ»óÇÑºû, ³ªÀÌÆ®Çìµå
	table[i++] = { i, 121, 108, 100, -1 }; //°í¿ì½ºÆ® - ÇÓ±â, ÀÌ»óÇÑºû, ³ªÀÌÆ®Çìµå
	table[i++] = { i, 121, 108, 100, -1 }; //ÆÒÅÒ - ÇÓ±â, ÀÌ»óÇÑºû, ³ªÀÌÆ®Çìµå
	table[i++] = { i, 32, 102, -1, -1 }; //·Õ½ºÅæ - ¸öÅë¹ÚÄ¡±â, ½ÈÀº¼Ò¸®
	table[i++] = { i, 0, 94, -1, -1 }; //½½¸®ÇÁ - ¸·Ä¡±â, ÃÖ¸é¼ú
	table[i++] = { i, 0, 94, 49, 92 }; //½½¸®ÆÛ - ¸·Ä¡±â, ÃÖ¸é¼ú, »ç½½¹­±â, ¿°µ¿·Â
	table[i++] = { i, 144, 42, -1, -1 }; //Å©·¦ - °ÅÇ°, Â°·Áº¸±â
	table[i++] = { i, 144, 42, 10, 11 }; //Å·Å©·¦ - °ÅÇ°, Â°·Áº¸±â, Âó±â, °¡À§ÀÚ¸£±â
	table[i++] = { i, 32, 102, -1, -1 }; //Âî¸®¸®°ø - ¸öÅë¹ÚÄ¡±â, ½ÈÀº¼Ò¸®
	table[i++] = { i, 32, 102, 48, 119 }; //ºÕº¼ - ¸öÅë¹ÚÄ¡±â, ½ÈÀº¼Ò¸®, ¼Ò´ÐºÕ, ÀÚÆø
	table[i++] = { i, 139, 94, -1, -1 }; //¾Æ¶ó¸® - ±¸½½´øÁö±â, ÃÖ¸é¼ú
	table[i++] = { i, 139, 94, -1, -1 }; //³ª½Ã - ±¸½½´øÁö±â, ÃÖ¸é¼ú
	table[i++] = { i, 124, 44, -1, -1 }; //ÅÁ±¸¸® - »À´Ù±ÍÄ¡±â, ¿ïÀ½¼Ò¸®
	table[i++] = { i, 124, 44, 42, 115 }; //ÅÖ±¸¸® - »À´Ù±ÍÄ¡±â, ¿ïÀ½¼Ò¸®, Â°·Áº¸±â, ±âÃæÀü
	table[i++] = { i, 23, 95, -1, -1 }; //½Ã¶ó¼Ò¸ó - µÎ¹øÄ¡±â, ¿ä°¡Æ÷Áî
	table[i++] = { i, 3, 96, 49, 92 }; //È«¼ö¸ó - ¿¬¼ÓÆÝÄ¡, °í¼ÓÀÌµ¿
	table[i++] = { i, 34, 47, -1, -1 }; //³»·ç¹Ì - ±è¹ä¸»ÀÌ, ÃÊÀ½ÆÄ
	table[i++] = { i, 32, 122, -1, -1 }; //¶Ç°¡½º - ¸öÅë¹ÚÄ¡±â, ½º¸ð±×
	table[i++] = { i, 32, 122, 123, -1 }; //¶Çµµ°¡½º - ¸öÅë¹ÚÄ¡±â, ½º¸ð±×, ¿À¹°°ø°Ý
	table[i++] = { i, 29, -1, -1, -1 }; //»ÔÄ«³ë - »ÔÂî¸£±â
	table[i++] = { i, 29, -1, -1, -1 }; //ÄÚ»Ñ¸® - »ÔÂî¸£±â
	table[i++] = { i, 0, 2, 38, -1 }; //·°Å° - ¸·Ä¡±â, ¿¬¼Ó»´Ä¡±â, ²¿¸®Èçµé±â
	table[i++] = { i, 131, 19, -1, -1 }; //µ¢Äí¸® - ÈÖ°¨±â, Á¶ÀÌ±â
	table[i++] = { i, 3, 98, -1, -1 }; //Å·Ä« - ¿¬¼ÓÆÝÄ¡, ºÐ³ë
	table[i++] = { i, 144, -1, -1, -1 }; //½îµå¶ó - °ÅÇ°
	table[i++] = { i, 144, 107, 42, 54 }; //½Ãµå¶ó - °ÅÇ°, ¿¬¸·, Â°·Áº¸±â, ¹°´ëÆ÷
	table[i++] = { i, 63, 38, -1, -1 }; //ÄÜÄ¡ - ÂÉ±â, ²¿¸®Èçµé±â
	table[i++] = { i, 63, 38, 47, 29 }; //¿ÕÄÜÄ¡ - ÂÉ±â, ²¿¸®Èçµé±â, ÃÊÀ½ÆÄ, »ÔÂî¸£±â
	table[i++] = { i, 32, -1, -1, -1 }; //º°°¡»ç¸® - ¸öÅë¹ÚÄ¡±â
	table[i++] = { i, 32, 105, 54, -1 }; //¾ÆÄí½ºÅ¸ - ¸öÅë¹ÚÄ¡±â, ´Ü´ÜÇØÁö±â, ¹°´ëÆ÷
	table[i++] = { i, 92, 111, -1, -1 }; //¸¶ÀÓ¸Ç - ¿°µ¿·Â, ¹è¸®¾î
	table[i++] = { i, 97, 42, 115, -1 }; //½º¶óÅ© - Àü±¤¼®È­, Â°·Áº¸±â, ±âÃæÀü
	table[i++] = { i, 0, 121, 141, -1 }; //·çÁÖ¶ó - ¸·Ä¡±â, ÇÓ±â, ¾Ç¸¶ÀÇÅ°½º
	table[i++] = { i, 97, 42, -1, -1 }; //¿¡·¹ºê - Àü±¤¼®È­, Â°·Áº¸±â
	table[i++] = { i, 51, -1, -1, -1 }; //¸¶±×¸¶ - ºÒ²É¼¼·Ê
	table[i++] = { i, 10, -1, -1, -1 }; //»Ú»çÀÌÀú - Âó±â
	table[i++] = { i, 32, 22, -1, -1 }; //ÄËÅ¸·Î½º - ¸öÅë¹ÚÄ¡±â, Áþ¹â±â
	table[i++] = { i, 149, -1, -1, -1 }; //À×¾îÅ· - Æ¢¾î¿À¸£±â
	table[i++] = { i, 32, -1, -1, -1 }; //°¼¶óµµ½º - ¸öÅë¹ÚÄ¡±â
	table[i++] = { i, 54, 44, -1, -1 }; //¶óÇÁ¶ó½º - ¹°´ëÆ÷, ¿ïÀ½¼Ò¸®
	table[i++] = { i, 143, -1, -1, -1 }; //¸ÞÅ¸¸ù - º¯½Å
	table[i++] = { i, 32, 27, 44, 97 }; //ÀÌºêÀÌ - ¸öÅë¹ÚÄ¡±â, ¸ð·¡»Ñ¸®±â, ¿ïÀ½¼Ò¸®, Àü±¤¼®È­
	table[i++] = { i, 32, 27, -1, -1 }; //»þ¹Ìµå - ¸öÅë¹ÚÄ¡±â, ¸ð·¡»Ñ¸®±â
	table[i++] = { i, 32, 38, 97, 83 }; //ÁêÇÇ½ã´õ - ¸öÅë¹ÚÄ¡±â, ²¿¸®Èçµé±â, Àü±¤¼®È­, Àü±â¼îÅ©
	table[i++] = { i, 32, 38, 97, 51 }; //ºÎ½ºÅÍ - ¸öÅë¹ÚÄ¡±â, ²¿¸®Èçµé±â, Àü±¤¼®È­, ºÒ²É¼¼·Ê
	table[i++] = { i, 32, 158, 159, 59 }; //Æú¸®°ï - ¸öÅë¹ÚÄ¡±â, °¢Áö±â, ÅØ½ºÃ³, È¯»óºö
	table[i++] = { i, 102, 109, -1, -1 }; //¾Ï³ªÀÌÆ® - ¹°´ëÆ÷, ²®Áú¿¡¼û±â
	table[i++] = { i, 102, 109, 29, 42 }; //¾Ï½ºÅ¸ - ¹°´ëÆ÷, ²®Áú¿¡¼û±â, »ÔÂî¸£±â, Â°·Áº¸±â
	table[i++] = { i, 9, 105, -1, -1 }; //Åõ±¸ - ÇÒÄû±â, ´Ü´ÜÇØÁö±â
	table[i++] = { i, 9, 105, 70, 162 }; //Åõ±¸Çª½º - ÇÒÄû±â, ´Ü´ÜÇØÁö±â, Èí¼ö, º£¾î°¡¸£±â
	table[i++] = { i, 16, 96, -1, -1 }; //ÇÁÅ×¶ó - ³¯°³Ä¡±â, °í¼ÓÀÌµ¿
	table[i++] = { i, 28, 132, 155, -1 }; //Àá¸¸º¸ - ¹ÚÄ¡±â, ¸Á°¢¼ú, ÀáÀÚ±â
	table[i++] = { i, 63, 57, -1, -1 }; //ÇÁ¸®Á® - ÂÉ±â, ³Ãµ¿ºö
	table[i++] = { i, 64, 83, -1, -1 }; //½ã´õ - È¸ÀüºÎ¸®, Àü±â¼îÅ©
	table[i++] = { i, 63, 82, -1, -1 }; //ÆÄÀÌ¾î - ÂÉ±â, È¸¿À¸®ºÒ²É
	table[i++] = { i, 34, 42, -1, -1 }; //¹Ì´¨ - ±è¹ä¸»ÀÌ, Â°·Áº¸±â
	table[i++] = { i, 34, 42, 85, 96 }; //½Å´¨ - ±è¹ä¸»ÀÌ, Â°·Áº¸±â, Àü±âÀÚ¼®ÆÄ, °í¼ÓÀÌµ¿
	table[i++] = { i, 34, 42, 85, 96 }; //¸Á³ª´¨ - ±è¹ä¸»ÀÌ, Â°·Áº¸±â, Àü±âÀÚ¼®ÆÄ, °í¼ÓÀÌµ¿
	table[i++] = { i, 92, 49, 128, -1 }; //¹ÂÃ÷ - ¿°µ¿·Â, »ç½½¹­±â, ½ºÇÇµå½ºÅ¸
	table[i++] = { i, 0, -1, -1, -1 }; //¹Â - ¸·Ä¡±â

	if (fout.fail() == false)
	{
		for (int i = 0; i < 3; i++)
		{
			fout << table[i].pokemonIndex << " "
				<< table[i].skill[0] << " "
				<< table[i].skill[1] << " "
				<< table[i].skill[2] << " "
				<< table[i].skill[3] << std::endl;
		}
		fout.close();
	}

	delete[] table;
}

void PokemonManager::LoadPokemonTable()
{
	std::ifstream fout;

	fout.open("DB/SkillTable.db");

	if (fout.fail() == false)
	{
		for (int i = 0; i < 3; i++)
		{
			PokemonTable temp;
			fout >> temp.pokemonIndex
				>> temp.skill[0]
				>> temp.skill[1]
				>> temp.skill[2]
				>> temp.skill[3];
			m_pokemonTable.push_back(temp);
		}
		fout.close();
	}
}

void PokemonManager::RootMyPokemon()
{
	m_pokemonCount = 5;

	m_myPokemonList[0].m_data = POKEDEX.GetPokemonData(36);
	m_myPokemonList[0].m_level = 65;
	m_myPokemonList[0].m_sex =1;
	m_myPokemonList[0].m_skill[0] = SKILL_MANAGER.GetSkill(51);
	m_myPokemonList[0].m_skill[1] = SKILL_MANAGER.GetSkill(82);
	m_myPokemonList[0].m_skill[2] = SKILL_MANAGER.GetSkill(103);
	m_myPokemonList[0].m_skill[3] = SKILL_MANAGER.GetSkill(125);
	m_myPokemonList[0].m_hpMax = 2500;
	m_myPokemonList[0].m_hp = 2500;
	strcpy_s(m_myPokemonList[0].m_nickname, 20, m_myPokemonList[0].m_data.m_name);

	m_myPokemonList[1].m_data = POKEDEX.GetPokemonData(37);
	m_myPokemonList[1].m_level = 55;
	m_myPokemonList[1].m_sex = 0;
	m_myPokemonList[1].m_skill[0] = SKILL_MANAGER.GetSkill(51);
	m_myPokemonList[1].m_skill[1] = SKILL_MANAGER.GetSkill(82);
	m_myPokemonList[1].m_skill[2] = SKILL_MANAGER.GetSkill(103);
	m_myPokemonList[1].m_skill[3] = SKILL_MANAGER.GetSkill(125);
	m_myPokemonList[1].m_hpMax = m_myPokemonList[1].m_level * 50;
	m_myPokemonList[1].m_hp = m_myPokemonList[1].m_level * 40;
	strcpy_s(m_myPokemonList[1].m_nickname, 20, m_myPokemonList[1].m_data.m_name);

	m_myPokemonList[2].m_data = POKEDEX.GetPokemonData(148);
	m_myPokemonList[2].m_level = 48;
	m_myPokemonList[2].m_sex = 0;
	m_myPokemonList[2].m_skill[0] = SKILL_MANAGER.GetSkill(51);
	m_myPokemonList[2].m_skill[1] = SKILL_MANAGER.GetSkill(82);
	m_myPokemonList[2].m_skill[2] = SKILL_MANAGER.GetSkill(103);
	m_myPokemonList[2].m_skill[3] = SKILL_MANAGER.GetSkill(125);
	m_myPokemonList[2].m_hpMax = m_myPokemonList[2].m_level * 50;
	m_myPokemonList[2].m_hp = m_myPokemonList[2].m_level * 25;
	strcpy_s(m_myPokemonList[2].m_nickname, 20, m_myPokemonList[2].m_data.m_name);

	m_myPokemonList[3].m_data = POKEDEX.GetPokemonData(72);
	m_myPokemonList[3].m_level = 92;
	m_myPokemonList[3].m_sex = 1;
	m_myPokemonList[3].m_skill[0] = SKILL_MANAGER.GetSkill(51);
	m_myPokemonList[3].m_skill[1] = SKILL_MANAGER.GetSkill(82);
	m_myPokemonList[3].m_skill[2] = SKILL_MANAGER.GetSkill(103);
	m_myPokemonList[3].m_skill[3] = SKILL_MANAGER.GetSkill(125);
	m_myPokemonList[3].m_hpMax = m_myPokemonList[3].m_level * 50;
	m_myPokemonList[3].m_hp = m_myPokemonList[3].m_level * 10;
	strcpy_s(m_myPokemonList[3].m_nickname, 20, m_myPokemonList[3].m_data.m_name);

	m_myPokemonList[4].m_data = POKEDEX.GetPokemonData(44);
	m_myPokemonList[4].m_level = 82;
	m_myPokemonList[4].m_sex = 1;
	m_myPokemonList[4].m_skill[0] = SKILL_MANAGER.GetSkill(51);
	m_myPokemonList[4].m_skill[1] = SKILL_MANAGER.GetSkill(82);
	m_myPokemonList[4].m_skill[2] = SKILL_MANAGER.GetSkill(103);
	m_myPokemonList[4].m_skill[3] = SKILL_MANAGER.GetSkill(125);
	m_myPokemonList[4].m_hpMax = m_myPokemonList[4].m_level * 50;
	m_myPokemonList[4].m_hp = m_myPokemonList[4].m_hpMax;
	strcpy_s(m_myPokemonList[4].m_nickname, 20, m_myPokemonList[4].m_data.m_name);
}

void PokemonManager::Init()
{
	//SaveMyPokemon();
	LoadMyPokemon();
	SaveNPCPokemon();
	LoadNPCPokemon();
	SavePokemonTable();
	LoadPokemonTable();
}

void PokemonManager::SetMyPokemonList(Pokemon* _pokemonList, int _size)
{
	for (int i = 0; i < _size; i++)
	{
		m_myPokemonList[i] = _pokemonList[i];
	}

	m_pokemonCount = _size;
}

Pokemon* PokemonManager::GetMyPokemonList()
{
	return m_myPokemonList;
}

Pokemon PokemonManager::GetMyPokemon(int _index)
{
	if (_index >= 6) return Pokemon();
	else return m_myPokemonList[_index];
}

Pokemon* PokemonManager::GetSelectedMyPokemon()
{
	return &m_myPokemonList[m_currentMyIndex];
}

int PokemonManager::GetSelectedPokemonNumber()
{
	return m_currentMyIndex;
}

void PokemonManager::SetSelectedMyPokemon(int _index)
{
	m_currentMyIndex = _index;
}

void PokemonManager::SettingBattleList()
{
	for (int i = 0; i < 6; i++)
	{
		m_battleList[i] = m_myPokemonList[i];
	}
}

Pokemon PokemonManager::GetMyBattlePokemon(int _index)
{
	if (_index >= 6) return Pokemon();
	else return m_battleList[_index];
}

Pokemon* PokemonManager::GetSelectedBattlePokemon()
{
	return &m_battleList[m_currentMyIndex];
}

void PokemonManager::SwapPokemon(int _swapIndex)
{
	Pokemon tmp = m_battleList[_swapIndex];
	m_battleList[_swapIndex] = m_battleList[0];
	m_battleList[0] = tmp;
}

void PokemonManager::SetEnemyPokemonList(int _npcNumber)
{
	EnemyPokemonTable* table = new EnemyPokemonTable;
	for (int i = 0; i < m_enemyTable.size(); i++)
	{
		if (m_enemyTable[i].npcNumber == _npcNumber)
		{
			table = &m_enemyTable[i];
		}
	}
	for (int i = 0; i < 6; i++)
	{
		Pokemon* temp = &m_enemyPokemonList[i];
		temp->m_data = POKEDEX.GetPokemonData(table->PokemonList[i].pokemonIndex);
		temp->m_level = 35;
		temp->m_sex = rand() % 2;
		temp->m_skill[0] = SKILL_MANAGER.GetSkill(16);
		temp->m_skill[1] = SKILL_MANAGER.GetSkill(70);
		temp->m_skill[2] = SKILL_MANAGER.GetSkill(93);
		temp->m_skill[3] = SKILL_MANAGER.GetSkill(108);
		temp->m_hpMax = 1200;
		temp->m_hp = temp->m_hpMax;
	}
}

Pokemon* PokemonManager::GetEnemyPokemonList(int _npcNumber)
{
	return m_enemyPokemonList;
}

Pokemon* PokemonManager::GetSelectedEnemyPokemon()
{
	return &m_enemyPokemonList[m_currentEnemyIndex];
}

void PokemonManager::SetSelectedEnemyPokemon(int _index)
{
	m_currentEnemyIndex = _index;
}

void PokemonManager::GeneratePokemon(int _area)
{	
	m_wildPokemon.m_condition = CONDITION::NO_CONDITION;
	m_wildPokemon.m_sex = rand() % 2;

	//Áö¿ª¿¡ µû¶ó »ý¼ºµÇ´Â Æ÷ÄÏ¸ó¸ñ·ÏÀÌ ´Ù¸£°Ô Ã³¸®
	switch (_area)
	{
	case 0:
	{
		int indexList[3] = { 12,55,73 }; //µîÀå Æ÷ÄÏ¸ó ¹øÈ£
		m_wildPokemon.m_data = POKEDEX.GetPokemonData(indexList[(rand()%3)]);
		m_wildPokemon.m_level = 6;
		m_wildPokemon.m_hpMax = 100 * m_wildPokemon.m_level;
		m_wildPokemon.m_hp = m_wildPokemon.m_hpMax;
		m_wildPokemon.m_giveExp = 50 * m_wildPokemon.m_level;
		m_wildPokemon.m_requiredExp = 300 * m_wildPokemon.m_level;
		m_wildPokemon.m_currentExp = 0;
		for (int i = 0; i < 4; i++)
		{
			m_wildPokemon.m_skill[i] = SKILL_MANAGER.GetSkillByType(m_wildPokemon.m_data.m_type_1, m_wildPokemon.m_data.m_type_2);
		}
	}break;
	}
	
}

Pokemon* PokemonManager::GetWildPokemon()
{
	return &m_wildPokemon;
}

void PokemonManager::CatchPokemon()
{
	//µé°íÀÖ´Â Æ÷ÄÏ¸óÀÌ 6¸¶¸®¶ó¸é, Æ÷ÄÏ¹Ú½º·Î Àü¼Û
	if (m_pokemonCount == 6)
	{

	}
	//¾Æ´Ï¶ó¸é °¡¹æ¿¡ Ãß°¡
	else
	{
		m_myPokemonList[5].m_data		= m_wildPokemon.m_data;
		m_myPokemonList[5].m_level		= m_wildPokemon.m_level;
		m_myPokemonList[5].m_sex		= m_wildPokemon.m_sex;
		m_myPokemonList[5].m_skill[0]	= m_wildPokemon.m_skill[0];
		m_myPokemonList[5].m_skill[1]	= m_wildPokemon.m_skill[1];
		m_myPokemonList[5].m_skill[2]	= m_wildPokemon.m_skill[2];
		m_myPokemonList[5].m_skill[3]	= m_wildPokemon.m_skill[3];
		m_myPokemonList[5].m_hpMax		= m_wildPokemon.m_hpMax;
		m_myPokemonList[5].m_hp			= m_wildPokemon.m_hp;
		strcpy_s(m_myPokemonList[5].m_nickname, 20, m_myPokemonList[5].m_data.m_name);

		m_wildPokemon = {};
		m_pokemonCount = 6;
	}
}

void PokemonManager::HealPokemon()
{
	for (auto p : m_myPokemonList)
	{
		p.m_hp = p.m_hpMax;
	}
}
